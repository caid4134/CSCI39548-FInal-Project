{"ast":null,"code":"var _jsxFileName = \"/home/user/Web Development Class/CSCI39548-FInal-Project/src/components/containers/AllInstructorsContainer.js\";\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllInstructorsThunk } from \"../../store/thunks\";\nimport { deleteInstructorThunk } from \"../../store/thunks\";\nimport { AllInstructorsView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllInstructorsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchAllInstructors();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(AllInstructorsView, {\n      allInstructors: this.props.allInstructors,\n      deleteInstructor: this.props.deleteInstructor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Map state to props;\n\n\nconst mapState = state => {\n  return {\n    allInstructors: state.allInstructors\n  };\n}; // Map dispatch to props;\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllInstructors: () => dispatch(fetchAllInstructorsThunk()),\n    deleteInstructorThunk: id => dispatch(deleteInstructorThunk(id))\n  };\n}; // Type check props;\n\n\nAllInstructorsContainer.propTypes = {\n  allInstructors: PropTypes.array.isRequired,\n  fetchAllInstructors: PropTypes.func.isRequired\n}; // Export our store-connected container by default;\n\nexport default connect(mapState, mapDispatch)(AllInstructorsContainer);","map":{"version":3,"names":["Component","PropTypes","connect","fetchAllInstructorsThunk","deleteInstructorThunk","AllInstructorsView","AllInstructorsContainer","componentDidMount","console","log","props","fetchAllInstructors","render","allInstructors","deleteInstructor","mapState","state","mapDispatch","dispatch","id","propTypes","array","isRequired","func"],"sources":["/home/user/Web Development Class/CSCI39548-FInal-Project/src/components/containers/AllInstructorsContainer.js"],"sourcesContent":["import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllInstructorsThunk } from \"../../store/thunks\";\nimport { deleteInstructorThunk } from \"../../store/thunks\";\nimport { AllInstructorsView } from \"../views\";\n\n\nclass AllInstructorsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchAllInstructors();\n  }\n\n  render() {\n    return (\n      <AllInstructorsView\n        allInstructors={this.props.allInstructors}\n        deleteInstructor={this.props.deleteInstructor}   \n      />\n    );\n  }\n}\n\n// Map state to props;\nconst mapState = (state) => {\n  return {\n    allInstructors: state.allInstructors,\n  };\n};\n\n// Map dispatch to props;\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchAllInstructors: () => dispatch(fetchAllInstructorsThunk()),\n    deleteInstructorThunk:(id) => dispatch(deleteInstructorThunk(id)),\n  };\n};\n\n// Type check props;\nAllInstructorsContainer.propTypes = {\n  allInstructors: PropTypes.array.isRequired,\n  fetchAllInstructors: PropTypes.func.isRequired,\n};\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(AllInstructorsContainer);"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,oBAAzC;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AACA,SAASC,kBAAT,QAAmC,UAAnC;;;AAGA,MAAMC,uBAAN,SAAsCN,SAAtC,CAAgD;EAC9CO,iBAAiB,GAAG;IAClBC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;IACA,KAAKA,KAAL,CAAWC,mBAAX;EACD;;EAEDC,MAAM,GAAG;IACP,oBACE,QAAC,kBAAD;MACE,cAAc,EAAE,KAAKF,KAAL,CAAWG,cAD7B;MAEE,gBAAgB,EAAE,KAAKH,KAAL,CAAWI;IAF/B;MAAA;MAAA;MAAA;IAAA,QADF;EAMD;;AAb6C,C,CAgBhD;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAC1B,OAAO;IACLH,cAAc,EAAEG,KAAK,CAACH;EADjB,CAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMI,WAAW,GAAIC,QAAD,IAAc;EAChC,OAAO;IACLP,mBAAmB,EAAE,MAAMO,QAAQ,CAACf,wBAAwB,EAAzB,CAD9B;IAELC,qBAAqB,EAAEe,EAAD,IAAQD,QAAQ,CAACd,qBAAqB,CAACe,EAAD,CAAtB;EAFjC,CAAP;AAID,CALD,C,CAOA;;;AACAb,uBAAuB,CAACc,SAAxB,GAAoC;EAClCP,cAAc,EAAEZ,SAAS,CAACoB,KAAV,CAAgBC,UADE;EAElCX,mBAAmB,EAAEV,SAAS,CAACsB,IAAV,CAAeD;AAFF,CAApC,C,CAKA;;AACA,eAAepB,OAAO,CAACa,QAAD,EAAWE,WAAX,CAAP,CAA+BX,uBAA/B,CAAf"},"metadata":{},"sourceType":"module"}